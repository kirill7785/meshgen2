// файл с объектами для сетки
// количество разбиений по осям.
// inx iny
0 33 33
// генератор сетки автоматический консольный без участия пользователя.
// идентификатор прямоугольного блока - id = 0.
// Далее следует булево значение : 0-hollow блок, 1-fluid блок.
// далее следует приоритет блока. Блок с более высоким приоритетом перекрывает блок с низким приоритетом.
// Блок задаётся 4 числами xS yS xE yE,
// следующие три числа это свойства материалов внутри этого блока : rho, cp, lambda.
// Границы должны генерироваться автоматически.
// Строка с двойной косой чертой сначала воспринимается как коментарий.
// Первое значение в фале это число блоков (элементов из которых состоит геометрия.
// всего один объект
//0 8 4 0// 0 прямоугольных блоков и 8 TOP блока 4 сектора. Обтекание Цилинра.
0 3 3 0//коленообразный смеситель
//0 1 4 0// окружность
//0 0 0 5// Произвольный выпуклый четырёхугольник.
// cabinet типа hollow прямоугольный блок, priority,  единичный квадрат с единичными свойствами материалов.
// priority изменяется последовательно начиная от нуля и заканчивая болшим значением (не больше 10000).
// id fluid priority xS yS xE yE rho cp lambda
//0 0 0 1.0 0.0 2.0 1.0 1.0 1.0 1.0
//0 1 1 1.0 0.0 2.0 0.2 1.0 1.0 1.0
//0 1 2 1.0 0.8 2.0 1.0 1.0 1.0 1.0
//0 1 3 1.0 0.0 1.2 1.0 1.0 1.0 1.0
//0 1 4 1.8 0.0 2.0 1.0 1.0 1.0 1.0
// TOP блоки задаются следующим образом.
// id=1, 1-fluid, priority=1, inx, iny,  xS, yS, xE, yE icurvetop icurvebottom itoporbottom atop,btop,ctop abot,bbot,cbot rho cp lambda.
// inx, iny - количество разбиений данного элемента по оси икс и игрик.
// id - это тип блока, fluid - это принадлежность области расчёта.
// Величина yE нужна для того чтобы вписать данный элемент в прямоугольник,
// а в прямоугольник его надо вписать потому что он должен соединятс с другими элементами в общей сетке,
// при этом в этом окаймляющем прямоугольнике не должно находится никаких других элементов,
// т.к. область получающаяся в результате такого пересечения плохо поддаётся описанию. 
// это сопло с рис. 10.2 из книги Д.Андерсон, Дж. Таннехилл., Р.Плетчер. том 2 стр. 633.
// icurve==0 парабола y=a*x*+b*x+c
// icurve==1 синусоида y=dy+a*sin(2*MPI*b*(x-c)) парпаметры dy,  a , b, c
// icurve==2 окружность y=yC+R*sin(MPI*theta/180.0); параметры yC,R, TS, TE.
// icurve==-1 просто горизонтальная или вертикальная прямая. параметры dy, a,b,c писать ненужно
// itoporbottom : -1 просто прямоуугольник, 0 - top, 1- bottom, 2 - double
// внимание если curve==MYCIRCLE==2 то обязательно нужно задавать разумное значение yE 
// по той причине что программа содержит замаскированную ошибку а дополнительное задание yE 
// создаёт дополнительное страховочное условие для проверки.
//1 1 0 30 30 1.0 0.0 2.0 5.0 0 -1 0 0.2 0.0 0.0 1.0 1.0 1.0
//1 1 0 30 30 1.0 0.0 2.0 1.3 1 1 2 1.3 0.09 1.0 0.0 0.6 0.09 1.0 0.0 1.0 1.0 1.0
//1 1 1 30 30 0.0 0.6 1.0 1.3 -1 -1 0 1.0 1.0 1.0
//1 1 2 30 30 2.0 0.6 3.0 1.3 -1 -1 0 1.0 1.0 1.0
// область заключённая между двумя соосными цилиндрами начиная с угла TS и закнчивая углом TE.
// ip - идентификатор перехода с круга на квадрат или наоборот с квадрата на круг.
// если ip==0 то имеем две окружнсти, если ip==1 то внутренний радиус заменяется горизонтальной или вертикальной линией,
// если ip==2 то аналогично внешний радиус, а если ip==3 то одновременно и внешний и внутренний радиусы.
// этот элемент чрезвычайно важен так как позволяет генерировать сетку напоминающую сетку из программы icepak.
// ограничение. на один элемент сетки угол раствора не должен превышать 90 градусов. Всего угол должен лежать в пределе
// -135 град., до 225 град.
// id=2, 1-fluid, priority=1, inr, intheta,  xC, yC, RS, TS, RE, TE ip rho cp lambda.
//2 1 0 30 280 3.0 4.0 2.7 -135.0 3.4 -45.0 0 1.0 1.0 1.0
//2 1 0 30 30 1.0 2.0 2.0 -45.0 5.0 45.0 1 1.0 1.0 1.0
//2 1 1 30 30 1.0 2.0 1.0 -135.0 5.0 -45.0 1 1.0 1.0 1.0
//2 1 2 30 30 1.0 2.0 3.0 45.0 5.0 135.0 1 1.0 1.0 1.0
//2 1 3 30 30 1.0 2.0 0.0 135.0 5.0 225.0 1 1.0 1.0 1.0
// Обтекание цилиндра : (характерный пример для задач вычислительной гидродинамики).
//1 1 0 20 15 -5.0 -5.0 -3.0 -3.0 -1 -1 0 1.0 1.0 1.0
//1 1 1 20 15 -5.0 3.0 -3.0 5.0 -1 -1 0 1.0 1.0 1.0
//1 1 2 20 30 -5.0 -3.0 -3.0 3.0 -1 -1 0 1.0 1.0 1.0
//1 1 3 30 15 -3.0 -5.0 3.0 -3.0 -1 -1 0 1.0 1.0 1.0
//1 1 4 30 15 -3.0 3.0 3.0 5.0 -1 -1 0 1.0 1.0 1.0
//1 1 5 50 15 3.0 -5.0 8.0 -3.0 -1 -1 0 1.0 1.0 1.0
//1 1 6 50 15 3.0 3.0 8.0 5.0 -1 -1 0 1.0 1.0 1.0
//1 1 7 50 30 3.0 -3.0 8.0 3.0 -1 -1 0 1.0 1.0 1.0
//2 1 8 30 30 0.0 0.0 1.0 -45.0 3.0 45.0 2 1.0 1.0 1.0
//2 1 9 30 30 0.0 0.0 1.0 -135.0 -3.0 -45.0 2 1.0 1.0 1.0
//2 1 10 30 30 0.0 0.0 1.0 45.0 3.0 135.0 2 1.0 1.0 1.0
//2 1 11 30 30 0.0 0.0 1.0 135.0 -3.0 225.0 2 1.0 1.0 1.0
// введение в использование fluent. характерный пример.
1 1 0 16 8 0.0 0.0 32.0 16.0 -1 -1 0 1000.0 4216.0 0.667
1 1 1 8 16 48.0 32.0 64.0 64.0 -1 -1 0 1000.0 4216.0 0.667
1 1 2 8 12 52.53923935 -4.53853392 56.53923935 11.0  2 -1 0  32.0 32.0 -50.07 -39.93 1000.0 4216.0 0.667
2 1 3 8 8 32.0 32.0 16.0 -90.0 32.0 -50.07 0 1000.0 4216.0 0.667
2 1 4 8 8 32.0 32.0 16.0 -50.07 32.0 -39.93 0 1000.0 4216.0 0.667
2 1 5 8 8 32.0 32.0 16.0 -39.93 32.0 0.0 0 1000.0 4216.0 0.667
// единичный круг
//1 1 1 10 10 -0.2 -0.2 0.2 0.2 -1 -1 0 1.0 1.0 1.0
//2 1 2 8 10 0.0 0.0 0.2 -45.0 1.0 45.0 1 1.0 1.0 1.0
//2 1 3 8 10 0.0 0.0 -0.2 135.0 1.0 225.0 1 1.0 1.0 1.0
//2 1 4 8 10 0.0 0.0 0.2 45.0 1.0 135.0 1 1.0 1.0 1.0
//2 1 5 8 10 0.0 0.0 -0.2 -135.0 1.0 -45.0 1 1.0 1.0 1.0
// ещё один пример с сектором.
//2 1 0 30 90 0.0 0.0 1.0 0.0 4.0 90.0 1.0 1.0 1.0
//2 0 1 10 30 0.0 0.0 2.0 30.0 3.0 60.0 1.0 1.0 1.0
// окружность в квадрате , квадрат внутри окружности. Как в программе Icepak.
// id==4 fluid priority inx iny ioutorin== 0 or 1 xSout ySout xEout yEout  xSin ySin xEin yEin rad xC yC rho cp lambda 
// Идея данного алгоритма также заимствована из программы Icepak. Сначала строится обычная прямоугольная сетка во всей области не учитывая
// расположение окружной, затем узлы которые находятся вблизи окружности проецируются на окружность.
// id==5 fluid priority inx iny xS, yS, xE, yE  rho cp lambda icountcycle перечисляем окружности fluid xC yC R rho cp lambda,  fluid xC yC R rho cp lambda,..
// Произвольный выпуклый четырёхугольник стороны которого являются отрезками.
// id==3 fluid priority n1 n2 x1 y1 x2 y2 x3 y3 x4 y4 rho cp lambda 
// пятиконечная звезда.
//3 1 1 6 6 -4.0 -3.0 -1.0 -2.0 0.0 0.0 -3.0 -1.0 1.0 1.0 1.0
//3 1 2 6 6 -1.0 -2.0 4.0 -3.0 3.0 -1.0 0.0 0.0 1.0 1.0 1.0
//3 1 3 6 6 0.0 0.0 3.0 -1.0 5.0 1.0 2.0 2.0 1.0 1.0 1.0
//3 1 4 6 6 0.0 0.0 2.0 2.0 1.0 5.0 -2.0 2.0 1.0 1.0 1.0
//3 1 5 6 6 -2.0 2.0 -5.0 1.0 -3.0 -1.0 0.0 0.0 1.0 1.0 1.0 
// Докторович разбиение тора.

